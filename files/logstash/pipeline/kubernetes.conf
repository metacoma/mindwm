input {
  http {
    port      => 12123
    additional_codecs => { }
    codec     => json
  }
}



filter {
  if ! [kubernetes][namespace_name] { drop {} }

  ruby {
    code => '
require "base64"
namespace_node = event.get("[kubernetes][namespace_name]").to_s
container_name = event.get("[kubernetes][pod_name]").to_s
host = event.get("[kubernetes][host]").to_s

log = event.get("log").to_s
groovy_code = Base64.strict_encode64("

root_node = c.getViewRoot()

namespace_node = root_node.find{it.text == \"#{namespace_node}\"}
if (namespace_node) {
    namespace_node = namespace_node[0]
  } else { 
    namespace_node = node.createChild(\"#{namespace_node}\")
} 
//namespace_node.setFolded(true)

container_node = namespace_node.find{ it.text == \"#{container_name}\"} 
if (container_node) {
    container_node = container_node[0]  
  } else {
    container_node = namespace_node.createChild(\"#{container_name}\")
} 
container_node.link.text = \"execute:_xterm%20-e%20kubectl%20-n%20#{namespace_node}%20exec%20-ti%20#{container_name}%20--%20/bin/sh\"
container_node[\"host\"] = \"#{host}\"
")
event.set("groovy", groovy_code)
'
  }
} 
#container_node.details = \"#{log}\"
output {
  stdout {
    codec => line { format => "%{groovy}"}
  }
  file {
    codec => line { format => "%{groovy}"}
    path => "/tmp/LOG"
    flush_interval => 0
  } 
}
