# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import freeplane_pb2 as freeplane__pb2


class FreeplaneStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateChild = channel.unary_unary(
                '/freeplane.Freeplane/CreateChild',
                request_serializer=freeplane__pb2.CreateChildRequest.SerializeToString,
                response_deserializer=freeplane__pb2.CreateChildResponse.FromString,
                )
        self.DeleteChild = channel.unary_unary(
                '/freeplane.Freeplane/DeleteChild',
                request_serializer=freeplane__pb2.DeleteChildRequest.SerializeToString,
                response_deserializer=freeplane__pb2.DeleteChildResponse.FromString,
                )
        self.NodeAttributeAdd = channel.unary_unary(
                '/freeplane.Freeplane/NodeAttributeAdd',
                request_serializer=freeplane__pb2.NodeAttributeAddRequest.SerializeToString,
                response_deserializer=freeplane__pb2.NodeAttributeAddResponse.FromString,
                )
        self.NodeLinkSet = channel.unary_unary(
                '/freeplane.Freeplane/NodeLinkSet',
                request_serializer=freeplane__pb2.NodeLinkSetRequest.SerializeToString,
                response_deserializer=freeplane__pb2.NodeLinkSetResponse.FromString,
                )
        self.NodeDetailsSet = channel.unary_unary(
                '/freeplane.Freeplane/NodeDetailsSet',
                request_serializer=freeplane__pb2.NodeDetailsSetRequest.SerializeToString,
                response_deserializer=freeplane__pb2.NodeDetailsSetResponse.FromString,
                )
        self.Groovy = channel.unary_unary(
                '/freeplane.Freeplane/Groovy',
                request_serializer=freeplane__pb2.GroovyRequest.SerializeToString,
                response_deserializer=freeplane__pb2.GroovyResponse.FromString,
                )
        self.NodeColorSet = channel.unary_unary(
                '/freeplane.Freeplane/NodeColorSet',
                request_serializer=freeplane__pb2.NodeColorSetRequest.SerializeToString,
                response_deserializer=freeplane__pb2.NodeColorSetResponse.FromString,
                )
        self.NodeBackgroundColorSet = channel.unary_unary(
                '/freeplane.Freeplane/NodeBackgroundColorSet',
                request_serializer=freeplane__pb2.NodeBackgroundColorSetRequest.SerializeToString,
                response_deserializer=freeplane__pb2.NodeBackgroundColorSetResponse.FromString,
                )
        self.StatusInfoSet = channel.unary_unary(
                '/freeplane.Freeplane/StatusInfoSet',
                request_serializer=freeplane__pb2.StatusInfoSetRequest.SerializeToString,
                response_deserializer=freeplane__pb2.StatusInfoSetResponse.FromString,
                )
        self.TextFSM = channel.unary_unary(
                '/freeplane.Freeplane/TextFSM',
                request_serializer=freeplane__pb2.TextFSMRequest.SerializeToString,
                response_deserializer=freeplane__pb2.TextFSMResponse.FromString,
                )
        self.MindMapFromJSON = channel.unary_unary(
                '/freeplane.Freeplane/MindMapFromJSON',
                request_serializer=freeplane__pb2.MindMapFromJSONRequest.SerializeToString,
                response_deserializer=freeplane__pb2.MindMapFromJSONResponse.FromString,
                )
        self.MindMapToJSON = channel.unary_unary(
                '/freeplane.Freeplane/MindMapToJSON',
                request_serializer=freeplane__pb2.MindMapToJSONRequest.SerializeToString,
                response_deserializer=freeplane__pb2.MindMapToJSONResponse.FromString,
                )


class FreeplaneServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateChild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteChild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NodeAttributeAdd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NodeLinkSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NodeDetailsSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Groovy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NodeColorSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NodeBackgroundColorSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StatusInfoSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TextFSM(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MindMapFromJSON(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MindMapToJSON(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FreeplaneServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateChild': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateChild,
                    request_deserializer=freeplane__pb2.CreateChildRequest.FromString,
                    response_serializer=freeplane__pb2.CreateChildResponse.SerializeToString,
            ),
            'DeleteChild': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteChild,
                    request_deserializer=freeplane__pb2.DeleteChildRequest.FromString,
                    response_serializer=freeplane__pb2.DeleteChildResponse.SerializeToString,
            ),
            'NodeAttributeAdd': grpc.unary_unary_rpc_method_handler(
                    servicer.NodeAttributeAdd,
                    request_deserializer=freeplane__pb2.NodeAttributeAddRequest.FromString,
                    response_serializer=freeplane__pb2.NodeAttributeAddResponse.SerializeToString,
            ),
            'NodeLinkSet': grpc.unary_unary_rpc_method_handler(
                    servicer.NodeLinkSet,
                    request_deserializer=freeplane__pb2.NodeLinkSetRequest.FromString,
                    response_serializer=freeplane__pb2.NodeLinkSetResponse.SerializeToString,
            ),
            'NodeDetailsSet': grpc.unary_unary_rpc_method_handler(
                    servicer.NodeDetailsSet,
                    request_deserializer=freeplane__pb2.NodeDetailsSetRequest.FromString,
                    response_serializer=freeplane__pb2.NodeDetailsSetResponse.SerializeToString,
            ),
            'Groovy': grpc.unary_unary_rpc_method_handler(
                    servicer.Groovy,
                    request_deserializer=freeplane__pb2.GroovyRequest.FromString,
                    response_serializer=freeplane__pb2.GroovyResponse.SerializeToString,
            ),
            'NodeColorSet': grpc.unary_unary_rpc_method_handler(
                    servicer.NodeColorSet,
                    request_deserializer=freeplane__pb2.NodeColorSetRequest.FromString,
                    response_serializer=freeplane__pb2.NodeColorSetResponse.SerializeToString,
            ),
            'NodeBackgroundColorSet': grpc.unary_unary_rpc_method_handler(
                    servicer.NodeBackgroundColorSet,
                    request_deserializer=freeplane__pb2.NodeBackgroundColorSetRequest.FromString,
                    response_serializer=freeplane__pb2.NodeBackgroundColorSetResponse.SerializeToString,
            ),
            'StatusInfoSet': grpc.unary_unary_rpc_method_handler(
                    servicer.StatusInfoSet,
                    request_deserializer=freeplane__pb2.StatusInfoSetRequest.FromString,
                    response_serializer=freeplane__pb2.StatusInfoSetResponse.SerializeToString,
            ),
            'TextFSM': grpc.unary_unary_rpc_method_handler(
                    servicer.TextFSM,
                    request_deserializer=freeplane__pb2.TextFSMRequest.FromString,
                    response_serializer=freeplane__pb2.TextFSMResponse.SerializeToString,
            ),
            'MindMapFromJSON': grpc.unary_unary_rpc_method_handler(
                    servicer.MindMapFromJSON,
                    request_deserializer=freeplane__pb2.MindMapFromJSONRequest.FromString,
                    response_serializer=freeplane__pb2.MindMapFromJSONResponse.SerializeToString,
            ),
            'MindMapToJSON': grpc.unary_unary_rpc_method_handler(
                    servicer.MindMapToJSON,
                    request_deserializer=freeplane__pb2.MindMapToJSONRequest.FromString,
                    response_serializer=freeplane__pb2.MindMapToJSONResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'freeplane.Freeplane', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Freeplane(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateChild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/CreateChild',
            freeplane__pb2.CreateChildRequest.SerializeToString,
            freeplane__pb2.CreateChildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteChild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/DeleteChild',
            freeplane__pb2.DeleteChildRequest.SerializeToString,
            freeplane__pb2.DeleteChildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NodeAttributeAdd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/NodeAttributeAdd',
            freeplane__pb2.NodeAttributeAddRequest.SerializeToString,
            freeplane__pb2.NodeAttributeAddResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NodeLinkSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/NodeLinkSet',
            freeplane__pb2.NodeLinkSetRequest.SerializeToString,
            freeplane__pb2.NodeLinkSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NodeDetailsSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/NodeDetailsSet',
            freeplane__pb2.NodeDetailsSetRequest.SerializeToString,
            freeplane__pb2.NodeDetailsSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Groovy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/Groovy',
            freeplane__pb2.GroovyRequest.SerializeToString,
            freeplane__pb2.GroovyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NodeColorSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/NodeColorSet',
            freeplane__pb2.NodeColorSetRequest.SerializeToString,
            freeplane__pb2.NodeColorSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NodeBackgroundColorSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/NodeBackgroundColorSet',
            freeplane__pb2.NodeBackgroundColorSetRequest.SerializeToString,
            freeplane__pb2.NodeBackgroundColorSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StatusInfoSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/StatusInfoSet',
            freeplane__pb2.StatusInfoSetRequest.SerializeToString,
            freeplane__pb2.StatusInfoSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TextFSM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/TextFSM',
            freeplane__pb2.TextFSMRequest.SerializeToString,
            freeplane__pb2.TextFSMResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MindMapFromJSON(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/MindMapFromJSON',
            freeplane__pb2.MindMapFromJSONRequest.SerializeToString,
            freeplane__pb2.MindMapFromJSONResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MindMapToJSON(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/freeplane.Freeplane/MindMapToJSON',
            freeplane__pb2.MindMapToJSONRequest.SerializeToString,
            freeplane__pb2.MindMapToJSONResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
