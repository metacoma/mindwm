---
parameters:

  opensearch_helm_release: opensearch

  bash:
    functions:
      opensearch_install: |
        local ns=\${1:-${opensearch_k8s_namespace}}
        (
          cd ${kapitan_root}/files/helm-charts/opensearch
          helm upgrade ${opensearch_helm_release} \
            --namespace \${ns} \
            --create-namespace \
            --install . -f ${compiled_dir}/helm/opensearch.yaml
        )
      opensearch_delete: |
        helm delete ${opensearch_helm_release} \
          --namespace ${opensearch_k8s_namespace} \
          $*

      opensearch_logs: |
        kubectl -n ${opensearch_k8s_namespace} logs -f $* --selector=app.kubernetes.io/name=${opensearch_helm_release}

      force_delete_stuck_master: |
        kubectl -n ${opensearch_k8s_namespace} delete pod --force=true --grace-period=-1 ${opensearch_helm_release}-cluster-master-0
      opensearch_force_cleanup: |
        opensearch_delete
        force_delete_stuck_master
        kubectl -n ${opensearch_k8s_namespace} delete pvc --selector=app.kubernetes.io/name=opensearch
        kubectl -n ${opensearch_k8s_namespace} delete pv `kubectl -n opensearch get pv | grep -i opensearch | awk '{print $1}'`
      opensearch_pod: |
        kubectl -n ${opensearch_k8s_namespace} exec -it statefulset/${opensearch_helm_release}-cluster-master -c opensearch -- /bin/sh

  kapitan:
    dependencies:
      - type: helm
        output_path: files/helm-charts/opensearch
        source: https://opensearch-project.github.io/helm-charts/
        chart_name: opensearch
        version: 2.9.0

  # default values for chart
  helm:
    opensearch:
      extraVars:
        - name:  DISABLE_INSTALL_DEMO_CONFIG
          value: "true"
      service:
        type: NodePort
        nodePort: ${opensearch_port}
      singleNode: true

      persistence:
        image: busybox
        imageTag: 1.35.0 # to prevent pull image on each redeploy cycle
      sysctlInit:
        image: busybox
        imageTag: 1.35.0 # to prevent pull image on each redeploy cycle
      securityConfig:
        dataComplete: false
        config:
          data:
            config.yml: |-
              _meta:
                type: "config"
                config_version: 2
              config:
                dynamic:
                  http:
                    anonymous_auth_enabled: false
                    xff:
                      enabled: false
                      internalProxies: '192\.168\.0\.10|192\.168\.0\.11' # regex pattern
                  authc:
                    basic_internal_auth_domain:
                      description: "Authenticate via HTTP Basic against internal users database"
                      http_enabled: true
                      transport_enabled: true
                      order: 4
                      http_authenticator:
                        type: basic
                        challenge: true
                      authentication_backend:
                        type: intern

            internal_users.yml: |-
              _meta:
                type: "internalusers"
                config_version: 2
              admin:
                hash: "$2a$12$VcCDgh2NDk07JGN0rjGbM.Ad41qVR/YFJcgHp0UGns5JDymv..TOG"
                reserved: true
                backend_roles:
                - "admin"
                description: "Demo admin user"
              vector:
                hash: "$2y$12$Q/ZSlDPVB3va4H7I0cliTOjbnszK70ATQSlAmhWgSk1fEM.F4ApHW"
                reserved: true
                backend_roles:
                - "admin"
                description: "Demo admin user"
              anomalyadmin:
                hash: "$2y$12$TRwAAJgnNo67w3rVUz4FIeLx9Dy/llB79zf9I15CKJ9vkM4ZzAd3."
                reserved: false
                opendistro_security_roles:
                - "anomaly_full_access"
                description: "Demo anomaly admin user, using internal role"
              kibanaserver:
                hash: "$2a$12$4AcgAt3xwOWadA5s5blL6ev39OXDNhmOesEoo33eZtrq2N0YrU3H."
                reserved: true
                description: "Demo OpenSearch Dashboards user"
              kibanaro:
                hash: "$2a$12$JJSXNfTowz7Uu5ttXfeYpeYE0arACvcwlPBStB1F.MI7f0U9Z4DGC"
                reserved: false
                backend_roles:
                - "kibanauser"
                - "readall"
                attributes:
                  attribute1: "value1"
                  attribute2: "value2"
                  attribute3: "value3"
                description: "Demo OpenSearch Dashboards read only user, using external role mapping"
              logstash:
                hash: "$2a$12$u1ShR4l4uBS3Uv59Pa2y5.1uQuZBrZtmNfqB3iM/.jL0XoV9sghS2"
                reserved: false
                backend_roles:
                - "logstash"
                description: "Demo logstash user, using external role mapping"
              readall:
                hash: "$2a$12$ae4ycwzwvLtZxwZ82RmiEunBbIPiAmGZduBAjKN0TXdwQFtCwARz2"
                reserved: false
                backend_roles:
                - "readall"
                description: "Demo readall user, using external role mapping"
              snapshotrestore:
                hash: "$2y$12$DpwmetHKwgYnorbgdvORCenv4NAK8cPUg8AI6pxLCuWf/ALc0.v7W"
                reserved: false
                backend_roles:
                - "snapshotrestore"
                description: "Demo snapshotrestore user, using external role mapping"




      lifecycle:
        postStart:
          exec:
            command:
              - bash
              - -c
              - |
                echo lifecycle postStart


#                #!/bin/bash
#                # Add a template to adjust number of shards/replicas1
#                TEMPLATE_NAME=my_template
#                INDEX_PATTERN="logstash-*"
#                SHARD_COUNT=8
#                REPLICA_COUNT=1
#                ES_URL=http://localhost:9200
#                while [[ "$(curl -s -o /dev/null -w '%{http_code}\n' $ES_URL)" != "200" ]]; do sleep 1; done
#                curl -XPUT "$ES_URL/_template/$TEMPLATE_NAME" -H 'Content-Type: application/json' -d'{"index_patterns":['\""$INDEX_PATTERN"\"'],"settings":{"number_of_shards":'$SHARD_COUNT',"number_of_replicas":'$REPLICA_COUNT'}}'
#
