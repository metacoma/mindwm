---
classes:
 - kubernetes
 - kafka
parameters:

  base_image:
    repo: alpine
    tag: 3.17.1

  consumer_image:
    repo_prefix: metacoma/mindwm-k8s-consumer-
    tag: latest

  kafka:
    k8s:
      consumer_namespace: "mindwm"

  kapitan:
    dependencies:
      - source: https://github.com/jsonnet-libs/k8s-libsonnet
        type: git
        output_path: files/github.com/jsonnet-libs/k8s-libsonnet
        ref: 85543e49238903ac14b486321bd3d60fef09d9ef
    compile:
      # TODO(@metacoma) join these(jsonnet/kafka-k8s-consumer/*) jsonnet files into one file
      # for some reason the following jsonnet code doesn't work
      # ---------------------------------------------------------
      # local kap = import "lib/kapitan.libjsonnet";
      # local inventory = kap.inventory();
      # local p = inventory.parameters;
      # {
      #  [consumer_name + "/Dockerfile"]: kap.jinja2_template("templates/kafka/k8s-consumer/Dockerfile", {
      #    inventory: inventory,
      #    consumer: p.kafka.consumers[consumer_name]
      #  }),
      #  .......
      #  .......
      #  [consumer_name + "/consumer"]: kap.jinja2_template("templates/kafka/k8s-consumer/consumer", {
      #    inventory: inventory,
      #    consumer: p.kafka.consumers[consumer_name]
      #  }) for consumer_name in std.objectFieldsAll(p.kafka.consumers)
      # }
      # ---------------------------------------------------------
      - input_paths:
          - jsonnet/kafka-k8s-consumer/consumer-code.jsonnet
        output_path: kafka-k8s-consumer
        input_type: jsonnet
        output_type: plain

      - input_paths:
          - jsonnet/kafka-k8s-consumer/dockerfile.jsonnet
        output_path: kafka-k8s-consumer
        input_type: jsonnet
        output_type: plain
      - input_paths:
          - jsonnet/kafka-k8s-consumer/make.jsonnet
        output_path: kafka-k8s-consumer
        input_type: jsonnet
        output_type: plain
      - input_paths:
          - jsonnet/kafka-k8s-consumer/deployment.jsonnet
        output_path: kafka-k8s-consumer
        input_type: jsonnet
        output_type: yaml
