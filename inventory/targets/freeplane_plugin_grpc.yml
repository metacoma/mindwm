classes:
  - common
  - mindwm
  - vim
  - tmuxinator
  - tmuxinator.kapitan
  - freeplane
  - freeplane.grpc
  - grpc.protoc
  - bash.kapitan
  - bash.script


parameters:
  target_name: freeplane_plugin_grpc

  freeplane_root: ${kapitan_root}/files/github.com/freeplane

  grpc_ruby_docker:
    repo: grpc/ruby
    tag: latest

  kapitan:
    dependencies:
      - source: https://github.com/metacoma/freeplane_plugin_grpc
        type: git
        output_path: ${freeplane_root}/freeplane_plugin_grpc
        ref: main

  # for freeplane_build function
  gradle_version: 7
  jdk_version: 17

  bash:
    functions:
      grpcurl: |
        docker run \
          -i \
          -v `pwd`:/host/ \
          -w /host  \
          --network=host \
          fullstorydev/grpcurl $*
      freeplane_build: |
        (
        cd ${freeplane_root}
        # bash ./gRAdle.sh build
        docker run --rm -v "$(pwd)":/usr/src/myapp -w /usr/src/myapp gradle:7-jdk17 gradle build --no-build-cache --no-configuration-cache
        # docker run --rm -v "$(pwd)":/app -w /app gradle:${gradle_version}-jdk${jdk_version} gradle build
        )
      freeplane_clean: |
        cd ${freeplane_root}
        bash ./gradle.sh clean

      freeplane_grpc: |
        (
          cd ${compiled_dir}/grpc

          # copy freeplane.proto to freeplane_plugin_grpc
          cp -v freeplane.proto ${freeplane_root}/freeplane_plugin_grpc/src/main/proto/freeplane.proto

          # copy freeplane.proto to grpcurl
          cp -v freeplane.proto ${freeplane_root}/freeplane_plugin_grpc/grpc/shell/

          # ruby
          test -d ruby_lib || mkdir ruby_lib/
          docker run --rm 	\
            -it 		\
            -v `pwd`:/host 	\
            -w /host            \
            ${grpc_ruby_docker:repo}:${grpc_ruby_docker:tag} \
            grpc_tools_ruby_protoc -I . --ruby_out=ruby_lib --grpc_out=ruby_lib ./freeplane.proto

          cp -v ${compiled_dir}/grpc/ruby_lib/* ${kapitan_root}/files/grpc/freeplane_grpc/ruby/lib/
          test -d ${freeplane_root}/freeplane_plugin_grpc/grpc/ruby/lib || mkdir -p ${freeplane_root}/freeplane_plugin_grpc/grpc/ruby/lib
          cp -v ${compiled_dir}/grpc/ruby_lib/* ${freeplane_root}/freeplane_plugin_grpc/grpc/ruby/lib

          # python, needs to refact
          test -d python_lib || mkdir python_lib
          docker run  \
                  -v ${compiled_dir}:/compiled 	                                \
                  -w/compiled 							\
                  --rm -it 							\
                  --entrypoint /bin/sh 						\
                  python:3.11-slim -c '
                          pip3 install protobuf grpcio grpcio-tools
                          python -m grpc_tools.protoc -I/compiled/grpc --python_out=/compiled/grpc/python_lib --pyi_out=/compiled/grpc/python_lib --grpc_python_out=/compiled/grpc/python_lib /compiled/grpc/freeplane.proto
                  '

          cp ${compiled_dir}/grpc/python_lib/* ${kapitan_root}/files/grpc/freeplane_grpc/python

          test -d ${freeplane_root}/freeplane_plugin_grpc/grpc/python || mkdir -p ${freeplane_root}/freeplane_plugin_grpc/grpc/python
          cp -v ${compiled_dir}/grpc/python_lib/* ${freeplane_root}/freeplane_plugin_grpc/grpc/python

          # protoc \
          # --ruby_out=${kapitan_root}/files/grpc/freeplane_grpc/ruby/lib \
          #  ./helloworld.proto
        )

  tmuxinator:
    windows:
      freeplane:
        pre:
          - cd ${freeplane_root}
          - . ${compiled_dir}/functions.bash
        panes:
          -
            -
          -
            -
            - cd ${kapitan_root}/files/grpc/freeplane_grpc/ruby
      freeplane_plugin_grpc:
        pre:
          - cd ${freeplane_root}/
          - . ${compiled_dir}/functions.bash
        panes:
          -
            - cd freeplane_plugin_grpc
          -
            - vim -O freeplane_plugin_grpc/src/main/{proto,java/org/freeplane/plugin/grpc}/*
      grpc:
        pre:
          - cd ${kapitan_root}/files/grpc/grpc
          - . ${compiled_dir}/functions.bash
        panes:
          -
          -

      grpc_clients:
        pre:
          - cd ${kapitan_root}/files/grpc/freeplane_grpc
          - . ${compiled_dir}/functions.bash
        panes:
          -
            # python
            - test -d python || mkdir python
            - cd python
          -
            # ruby
            - test -d ruby/lib || mkdir -p ruby/lib
            - cd ruby

      python_grpc_client:
        pre:
          - cd ${kapitan_root}/files/grpc/freeplane_grpc/python
          - . ${compiled_dir}/functions.bash
        panes:
          -
            - . .venv/bin/activate
            - |
              #docker run -v`pwd`:/grpc -w /grpc --rm -it --net=host --entrypoint /bin/sh mindwm/freeplane_grpc_client_python:latest -c "python3 /grpc/freeplane_grpc_client.py"
          -
            - . .venv/bin/activate

      grpcurl:
        pre:
          - . ${compiled_dir}/functions.bash
        panes:
          -
            - |
              docker run -v `pwd`:/host -w /host --network=host  fullstorydev/grpcurl -proto ./freeplane.proto -d '{"name": "grpcurl", "parent_node_id": ""}' -plaintext localhost:50051 freeplane.Freeplane/CreateChild
          -
            -
